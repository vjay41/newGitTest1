SELECT 
    Identifier, 
    Node, 
    AlertGroup, 
    AlertKey, 
    Severity, 
    COUNT(*) AS EventCount 
FROM 
    alerts.status 
WHERE 
    LastOccurrence > NOW() - INTERVAL 1 HOUR
GROUP BY 
    Identifier, 
    Node, 
    AlertGroup, 
    AlertKey, 
    Severity
HAVING 
    COUNT(*) > 10
ORDER BY 
    EventCount DESC;


#!/bin/bash

# Directory to check
DIRECTORY="/apps/netcool"

# Get the disk usage percentage of the specified directory
usage=$(df -h $DIRECTORY | awk 'NR==2 {print $5}' | sed 's/%//')

# Check if the usage exceeds 70%
if [ "$usage" -gt 70 ]; then
  echo "Disk space usage for $DIRECTORY is more than 70%. Current usage is ${usage}%."
  exit 1
else
  echo "Disk space usage for $DIRECTORY is within limits. Current usage is ${usage}%."
  exit 0
fi



#!/bin/bash

# Get the hostname
HOSTNAME=$(hostname)

# Define the directory and the number of days
TARGET_DIR="/home/nco"
DAYS=30

# Find and delete old .tar.gz and .zip files prefixed with the hostname
find "$TARGET_DIR" -type f \( -name "${HOSTNAME}*.tar.gz" -o -name "${HOSTNAME}*.zip" \) -mtime +$DAYS -exec rm -f {} \;

echo "Old .tar.gz and .zip files older than $DAYS days, prefixed with $HOSTNAME, have been deleted from $TARGET_DIR."






#!/bin/bash

# Get the hostname
HOSTNAME=$(hostname)

# Define the directory and the number of days
TARGET_DIR="/home/nco"
DAYS=30

# Find and delete old .tar.gz and .zip files prefixed with the hostname
find "$TARGET_DIR" -type f \( -name "${HOSTNAME}*.tar.gz" -o -name "${HOSTNAME}*.zip" \) -mtime +$DAYS -print -exec rm -f {} \;

echo "Deletion complete. Listed above are the old .tar.gz and .zip files older than $DAYS days, prefixed with $HOSTNAME, that have been deleted from $TARGET_DIR."
